---
export const prerender = false;

import { getCollection } from "astro:content";
import { PostCard, Slot } from "../../components/main";
import { Tab, TabItem } from '../../components/tabs';
import Base from "../../layouts/base.astro";

const { searchParams } = Astro.url;

const category = searchParams.get('category');

const categories = (await getCollection('category'))
    .map(cat => ({
        id: cat.id,
        title: cat.data.title,
        slug: cat.data.slug ?? cat.data.slug
    }))

const posts = (await getCollection('post'))
    .map(post => 
    ({ 
        ...post.data, 
        slug: post.slug,
    }))
    .sort((a, b) => Number(b.updated_at) - Number(a.updated_at))
    .filter(a => category != null ? a.category == category : true);
---

<Base title="Lazaro Osee">
	<Slot slot="head">
		<meta name="author" content="Lazaro Osee" />
		<meta 
			name="description" 
			content="The 'Official' Personnal Website and Blog of Lazaro Osee, an Architecture Student and a 'self taught' Software Developer" 
		/>
		<meta 
			name="keywords" 
			content="Lazaro, Osee, Architect, Web, Software, Developer, Blog, Posts" 
		/>
	</Slot>

    <section>
        <div data-kind="mobile">
            <div>
                {categories.map(category => (
                    <a href={`/?category=${category.id}`} hreflang="en-us">
                        {category.title}
                    </a>
                ))} 
            </div>
            <div class="body" data-posts={JSON.stringify(posts)}></div>
        </div>
        <div data-kind="tabs" class="tabs">
            <Tab>
                <TabItem category={{ slug: '', title: 'All' }}>
                    {posts.length > 0 ? posts.map(post => <PostCard {post} />
                    ) : (
                        <PostCard />
                    )}
                </TabItem>
                {categories.map(category => {
                    const cPosts = posts.filter(p => p.category === category.id);

                    return (
                        <TabItem category={category}>
                            {cPosts.length > 0 
                                ? cPosts.map(post => (
                                    <PostCard {post} />
                                )) 
                                : (
                                    <PostCard category={category.title} />
                                )}
                        </TabItem>
                    )
                })}
            </Tab>
        </div>
    </section>
</Base>

<style>
    [data-kind="mobile"] {
        display: contents;
    }
    [data-kind="tabs"] {
        display: none;
    }

    section {
        width: 100%;
        padding-inline: 2rem;
        justify-items: center;
        align-content: center;
    }

    @media(min-width: 640px) {
        [data-kind="mobile"] {
            display: none;
        }
        [data-kind="tabs"] {
            display: contents;
        }
    }
</style>
